ai-client:
  ollama:
    base-url: http://localhost:11434
    chat:
      options:
#        model: llama2 or gemma:2b
        model: gemma:2b
        temperature: 0.7
  openai:
    api-key: ${OPENAI_API_KEY}
    chat:
      model: gpt-3.5-turbo-1106
      temperature: 0.7
      max-tokens: 200
server:
  port: 8086
  servlet:
    context-path: /AiServiceClient
spring:
  datasource:
    url: jdbc:postgresql://localhost:5434/doc_management_db
    username: postgres
    password: toor
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
      default_schema: vectorcontent
    show-sql: true
  liquibase:
    change-log: classpath:db/changelog/DocumentContent-DOC_MANAGEMENT_DB/changeLog-master.xml
    default-schema: vectorcontent
spring-doc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    filter: true
    operations-sorter: alpha
  api-docs.path: /v3/rest-api-docs

logging:
  level:
    org:
      springframework:
        web: DEBUG
        data: DEBUG